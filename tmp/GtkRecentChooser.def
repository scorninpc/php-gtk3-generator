
void gtk_recent_chooser_set_show_private (GtkRecentChooser *chooser, gboolean show_private);

gboolean gtk_recent_chooser_get_show_private (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_show_not_found (GtkRecentChooser *chooser, gboolean show_not_found);

gboolean gtk_recent_chooser_get_show_not_found (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_show_icons (GtkRecentChooser *chooser, gboolean show_icons);

gboolean gtk_recent_chooser_get_show_icons (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_select_multiple (GtkRecentChooser *chooser, gboolean select_multiple);

gboolean gtk_recent_chooser_get_select_multiple (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_local_only (GtkRecentChooser *chooser, gboolean local_only);

gboolean gtk_recent_chooser_get_local_only (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_limit (GtkRecentChooser *chooser, gint limit);

gint gtk_recent_chooser_get_limit (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_show_tips (GtkRecentChooser *chooser, gboolean show_tips);

gboolean gtk_recent_chooser_get_show_tips (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_sort_type (GtkRecentChooser *chooser, GtkRecentSortType sort_type);

GtkRecentSortType gtk_recent_chooser_get_sort_type (GtkRecentChooser *chooser);

gint (*GtkRecentSortFunc) (GtkRecentInfo *a, GtkRecentInfo *b, gpointer user_data);

void gtk_recent_chooser_set_sort_func (GtkRecentChooser *chooser, GtkRecentSortFunc sort_func, gpointer sort_data, GDestroyNotify data_destroy);

gboolean gtk_recent_chooser_set_current_uri (GtkRecentChooser *chooser, gchar *uri, GError **error);

gchar * gtk_recent_chooser_get_current_uri (GtkRecentChooser *chooser);

GtkRecentInfo * gtk_recent_chooser_get_current_item (GtkRecentChooser *chooser);

gboolean gtk_recent_chooser_select_uri (GtkRecentChooser *chooser, gchar *uri, GError **error);

void gtk_recent_chooser_unselect_uri (GtkRecentChooser *chooser, gchar *uri);

void gtk_recent_chooser_select_all (GtkRecentChooser *chooser);

void gtk_recent_chooser_unselect_all (GtkRecentChooser *chooser);

GList * gtk_recent_chooser_get_items (GtkRecentChooser *chooser);

gchar ** gtk_recent_chooser_get_uris (GtkRecentChooser *chooser, gsize *length);

void gtk_recent_chooser_add_filter (GtkRecentChooser *chooser, GtkRecentFilter *filter);

void gtk_recent_chooser_remove_filter (GtkRecentChooser *chooser, GtkRecentFilter *filter);

GSList * gtk_recent_chooser_list_filters (GtkRecentChooser *chooser);

void gtk_recent_chooser_set_filter (GtkRecentChooser *chooser, GtkRecentFilter *filter);

GtkRecentFilter * gtk_recent_chooser_get_filter (GtkRecentChooser *chooser);

