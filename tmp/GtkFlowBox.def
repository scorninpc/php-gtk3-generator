GtkWidget *gtk_flow_box_new (void);

void gtk_flow_box_insert (GtkFlowBox *box, GtkWidget *widget, gint position);

GtkFlowBoxChild *gtk_flow_box_get_child_at_index (GtkFlowBox *box, gint idx);

void gtk_flow_box_set_hadjustment (GtkFlowBox *box, GtkAdjustment *adjustment);

void gtk_flow_box_set_vadjustment (GtkFlowBox *box, GtkAdjustment *adjustment);

void gtk_flow_box_set_homogeneous (GtkFlowBox *box, gboolean homogeneous);

gboolean gtk_flow_box_get_homogeneous (GtkFlowBox *box);

void gtk_flow_box_set_row_spacing (GtkFlowBox *box, guint spacing);

guint gtk_flow_box_get_row_spacing (GtkFlowBox *box);

void gtk_flow_box_set_column_spacing (GtkFlowBox *box, guint spacing);

guint gtk_flow_box_get_column_spacing (GtkFlowBox *box);

void gtk_flow_box_set_min_children_per_line (GtkFlowBox *box, guint n_children);

guint gtk_flow_box_get_min_children_per_line (GtkFlowBox *box);

void gtk_flow_box_set_max_children_per_line (GtkFlowBox *box, guint n_children);

guint gtk_flow_box_get_max_children_per_line (GtkFlowBox *box);

void gtk_flow_box_set_activate_on_single_click (GtkFlowBox *box, gboolean single);

gboolean gtk_flow_box_get_activate_on_single_click (GtkFlowBox *box);

void (*GtkFlowBoxForeachFunc) (GtkFlowBox *box, GtkFlowBoxChild *child, gpointer user_data);

void gtk_flow_box_selected_foreach (GtkFlowBox *box, GtkFlowBoxForeachFunc func, gpointer data);

GList *gtk_flow_box_get_selected_children (GtkFlowBox *box);

void gtk_flow_box_select_child (GtkFlowBox *box, GtkFlowBoxChild *child);

void gtk_flow_box_unselect_child (GtkFlowBox *box, GtkFlowBoxChild *child);

void gtk_flow_box_select_all (GtkFlowBox *box);

void gtk_flow_box_unselect_all (GtkFlowBox *box);

void gtk_flow_box_set_selection_mode (GtkFlowBox *box, GtkSelectionMode mode);

GtkSelectionMode gtk_flow_box_get_selection_mode (GtkFlowBox *box);

gboolean (*GtkFlowBoxFilterFunc) (GtkFlowBoxChild *child, gpointer user_data);

void gtk_flow_box_set_filter_func (GtkFlowBox *box, GtkFlowBoxFilterFunc filter_func, gpointer user_data, GDestroyNotify destroy);

void gtk_flow_box_invalidate_filter (GtkFlowBox *box);

gint (*GtkFlowBoxSortFunc) (GtkFlowBoxChild *child1, GtkFlowBoxChild *child2, gpointer user_data);

void gtk_flow_box_set_sort_func (GtkFlowBox *box, GtkFlowBoxSortFunc sort_func, gpointer user_data, GDestroyNotify destroy);

void gtk_flow_box_invalidate_sort (GtkFlowBox *box);

GtkWidget *(*GtkFlowBoxCreateWidgetFunc) (gpointer item, gpointer user_data);

void gtk_flow_box_bind_model (GtkFlowBox *box, GListModel *model, GtkFlowBoxCreateWidgetFunc create_widget_func, gpointer user_data, GDestroyNotify user_data_free_func);

GtkWidget *gtk_flow_box_child_new (void);

gint gtk_flow_box_child_get_index (GtkFlowBoxChild *child);

gboolean gtk_flow_box_child_is_selected (GtkFlowBoxChild *child);

void gtk_flow_box_child_changed (GtkFlowBoxChild *child);