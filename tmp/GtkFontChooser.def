
PangoFontFamily * gtk_font_chooser_get_font_family (GtkFontChooser *fontchooser);

PangoFontFace * gtk_font_chooser_get_font_face (GtkFontChooser *fontchooser);

gint gtk_font_chooser_get_font_size (GtkFontChooser *fontchooser);

gchar * gtk_font_chooser_get_font (GtkFontChooser *fontchooser);

void gtk_font_chooser_set_font (GtkFontChooser *fontchooser, gchar *fontname);

PangoFontDescription * gtk_font_chooser_get_font_desc (GtkFontChooser *fontchooser);

void gtk_font_chooser_set_font_desc (GtkFontChooser *fontchooser, PangoFontDescription *font_desc);

gchar * gtk_font_chooser_get_preview_text (GtkFontChooser *fontchooser);

void gtk_font_chooser_set_preview_text (GtkFontChooser *fontchooser, gchar *text);

gboolean gtk_font_chooser_get_show_preview_entry (GtkFontChooser *fontchooser);

void gtk_font_chooser_set_show_preview_entry (GtkFontChooser *fontchooser, gboolean show_preview_entry);

gboolean (*GtkFontFilterFunc) (PangoFontFamily *family, PangoFontFace *face, gpointer data);

void gtk_font_chooser_set_filter_func (GtkFontChooser *fontchooser, GtkFontFilterFunc filter, gpointer user_data, GDestroyNotify destroy);

void gtk_font_chooser_set_font_map (GtkFontChooser *fontchooser, PangoFontMap *fontmap);

PangoFontMap * gtk_font_chooser_get_font_map (GtkFontChooser *fontchooser);

